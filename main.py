import discord
from discord.ext import commands
import os
import asyncio
import aiohttp
import time
from dotenv import load_dotenv
from pathlib import Path

# ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv_path = Path('bot.env')  
load_dotenv(dotenv_path=dotenv_path)

TOKEN = os.getenv("TOKEN")
if not TOKEN:
    raise ValueError("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å bot.env —Ñ–∞–π–ª.")

# ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞
intents = discord.Intents.default()

intents.messages = True

intents.message_content = True

intents.members = True

intents.guilds = True


bot = commands.Bot(command_prefix="!", intents=intents)

# ‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
last_request_time = 0
rate_limit_delay = 5  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (–≤ —Å–µ–∫—É–Ω–¥–∞—Ö)

async def safe_api_request(url, session):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ —Å –æ–∂–∏–¥–∞–Ω–∏–µ–º –ø—Ä–∏ Rate Limit"""
    global last_request_time

    # –û–∂–∏–¥–∞–Ω–∏–µ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    now = time.time()
    if now - last_request_time < rate_limit_delay:
        await asyncio.sleep(rate_limit_delay - (now - last_request_time))

    async with session.get(url) as response:
        last_request_time = time.time()  # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞

        if response.status == 429:  # –ï—Å–ª–∏ –Ω–∞—Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏
            retry_after = int(response.headers.get("Retry-After", 10))
            print(f"‚ö†Ô∏è Rate Limit! –ñ–¥–µ–º {retry_after} —Å–µ–∫...")
            await asyncio.sleep(retry_after)  # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º
            return await safe_api_request(url, session)  # –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å

        return await response.json()

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")


COGS = ["cogs.count", "cogs.exams", "cogs.meeting", "cogs.automessage", "cogs.greeting"]
    
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–≥–æ–≤
async def load_cogs():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ `cogs`, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"""
    for cog in COGS:
        if cog in bot.extensions:  
            print(f"‚ö†Ô∏è {cog} —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...")
            continue
        try:
            await bot.load_extension(cog)
            print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω: {cog}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ {cog}: {e}")
            


@bot.event
async def on_message(message):
    """–§–∏–ª—å—Ç—Ä —á–∞—Å—Ç–æ—Ç—ã —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ø–∞—Å—Ç—å –ø–æ–¥ –±–ª–æ–∫"""
    if message.author == bot.user:
        return
    await asyncio.sleep(2)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–≤–µ—Ç–æ–º
    await bot.process_commands(message)

async def start_bot():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç Rate Limit"""
    async with aiohttp.ClientSession() as session:
        try:
            await load_cogs()
            await bot.start(TOKEN)
        except discord.HTTPException as e:
            if e.status == 429:
                retry_after = int(e.response.headers.get("Retry-After", 10))
                print(f"‚ö†Ô∏è Rate Limit! –ñ–¥–µ–º {retry_after} —Å–µ–∫ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º...")
                await asyncio.sleep(retry_after)
                await start_bot()
            else:
                raise e

if __name__ == "__main__":
    try:
        asyncio.run(start_bot())
    except KeyboardInterrupt:
        print("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é")
